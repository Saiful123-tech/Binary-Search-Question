//{ Driver Code Starts
// Initial Template for C#

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DriverCode {

class GFG {
    static void Main(string[] args) {
        int testcases; // Taking testcase as input
        testcases = Convert.ToInt32(Console.ReadLine());
        while (testcases-- > 0) // Looping through all testcases
        {
            int N = Convert.ToInt32(Console.ReadLine()); // Input for size of array

            string elements = Console.ReadLine().Trim();
            elements = elements + " " + "0";
            int[] arr1 = Array.ConvertAll(elements.Split(), int.Parse);

            int x = Convert.ToInt32(Console.ReadLine()); // Input for key
            Solution obj = new Solution();
            int res = obj.binarysearch(arr1, N, x);
            Console.Write(res);
            Console.Write("\n");
        }
    }
}
}

// } Driver Code Ends


// User function Template for C#

class Solution {
    // Complete this function
    public int binarysearch(int[] arr, int n, int k) {
        // Your code 
        int s = 0;
        int e = n-1;
        while(s <= e){
            int mid = s + (e-s) /2;
            if(arr[mid]==k){
                return mid;
            }
            else if(arr[mid]>k){
                
                e=mid-1;
            }
            else if(arr[mid]<k){
                s=mid+1;
            }
        }
       return -1;
    }
}
